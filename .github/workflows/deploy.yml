name: Build and Deploy to Docker Hub

on:
  push:
    branches:
      - '**'  # Trigger on pushes to any branch
      
  workflow_dispatch:

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
    - name: Check Out Repo
      uses: actions/checkout@v2

    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and Push Docker image
      uses: docker/build-push-action@v2
      with:
        context: ../../Movies-CRUD/Movies-CRUD
        file: ../../Movies-CRUD/Movies-CRUD/Dockerfile
        push: true
        tags: shubhmrk/crud-api:latest

    - name: Verify Pushed Image
      run: docker pull shubhmrk/crud-api:latest

    - name: Deploy to EC2 with CloudWatch Logging
      uses: appleboy/ssh-action@v0.1.5
      with:
        host: ${{ secrets.SSH_HOST }}
        username: ${{ secrets.SSH_USERNAME }}
        key: ${{ secrets.SSH_KEY }}
        script: |
          # 1. Pull the latest image
          sudo docker pull shubhmrk/crud-api:latest
          
          # 2. Stop and remove the old container
          # The '|| true' ensures the step doesn't fail if the container isn't running
          sudo docker stop crud-app || true
          sudo docker rm crud-app || true
          
          # 3. Define the CloudWatch variables using GitHub Secrets
          # NOTE: You MUST create these secrets in your GitHub repo settings.
          # LOG_GROUP="${{ secrets.CLOUDWATCH_LOG_GROUP }}"
          # AWS_REGION="${{ secrets.AWS_REGION }}"
          
          # Use the container name and a timestamp for a unique Log Stream
          # LOG_STREAM="crud-app-$(date +%Y%m%d%H%M%S)"

          # 4. Run the new container with awslogs driver and options
          # PREREQUISITE: The EC2 instance's IAM Role must have 'logs:PutLogEvents' permissions.
          sudo docker run -d \
            --name crud-app \
            -p 8080:8080 \
            # --log-driver=awslogs \
            # --log-opt awslogs-region=${AWS_REGION} \
            # --log-opt awslogs-group=${LOG_GROUP} \
            # --log-opt awslogs-stream=${LOG_STREAM} \
            # --log-opt awslogs-create-group=true \
            shubhmrk/crud-api:latest